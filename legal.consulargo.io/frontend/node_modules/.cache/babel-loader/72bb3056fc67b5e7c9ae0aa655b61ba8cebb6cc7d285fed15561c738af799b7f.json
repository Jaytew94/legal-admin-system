{"ast":null,"code":"import React,{useState}from'react';import{Form,Input,Button,Card,message,Space}from'antd';import{LockOutlined,UserOutlined}from'@ant-design/icons';import{useAuth}from'../contexts/AuthContext';import{authService}from'../services/authService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Settings=()=>{const[loading,setLoading]=useState(false);const[usernameLoading,setUsernameLoading]=useState(false);const[form]=Form.useForm();const[usernameForm]=Form.useForm();const{user,refreshUser}=useAuth();const onFinish=async values=>{setLoading(true);try{await authService.changePassword(values.currentPassword,values.newPassword);message.success('密码修改成功！');form.resetFields();}catch(error){var _error$response,_error$response$data;message.error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'密码修改失败');}finally{setLoading(false);}};const onUsernameFinish=async values=>{setUsernameLoading(true);try{await authService.changeUsername(values.newUsername);message.success('用户名修改成功！');usernameForm.resetFields();// 刷新用户信息\nif(refreshUser){refreshUser();}}catch(error){message.error(error.message||'用户名修改失败');}finally{setUsernameLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{style:{marginBottom:'24px'},children:\"\\u8BBE\\u7F6E\"}),/*#__PURE__*/_jsx(Card,{title:\"\\u4FEE\\u6539\\u7528\\u6237\\u540D\",style:{maxWidth:500,marginBottom:'24px'},children:/*#__PURE__*/_jsxs(Form,{form:usernameForm,layout:\"vertical\",onFinish:onUsernameFinish,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"newUsername\",label:\"\\u65B0\\u7528\\u6237\\u540D\",rules:[{required:true,message:'请输入新用户名'},{min:3,message:'用户名长度至少3位'},{validator:(_,value)=>{if(value&&value===(user===null||user===void 0?void 0:user.username)){return Promise.reject(new Error('新用户名不能与当前用户名相同'));}return Promise.resolve();}}],children:/*#__PURE__*/_jsx(Input,{prefix:/*#__PURE__*/_jsx(UserOutlined,{}),placeholder:\"\\u5F53\\u524D\\u7528\\u6237\\u540D: \".concat(user===null||user===void 0?void 0:user.username)})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",loading:usernameLoading,children:\"\\u4FEE\\u6539\\u7528\\u6237\\u540D\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>usernameForm.resetFields(),children:\"\\u91CD\\u7F6E\"})]})})]})}),/*#__PURE__*/_jsx(Card,{title:\"\\u4FEE\\u6539\\u5BC6\\u7801\",style:{maxWidth:500},children:/*#__PURE__*/_jsxs(Form,{form:form,layout:\"vertical\",onFinish:onFinish,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"currentPassword\",label:\"\\u5F53\\u524D\\u5BC6\\u7801\",rules:[{required:true,message:'请输入当前密码'}],children:/*#__PURE__*/_jsx(Input.Password,{prefix:/*#__PURE__*/_jsx(LockOutlined,{}),placeholder:\"\\u8BF7\\u8F93\\u5165\\u5F53\\u524D\\u5BC6\\u7801\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"newPassword\",label:\"\\u65B0\\u5BC6\\u7801\",rules:[{required:true,message:'请输入新密码'},{min:6,message:'密码长度至少6位'}],children:/*#__PURE__*/_jsx(Input.Password,{prefix:/*#__PURE__*/_jsx(LockOutlined,{}),placeholder:\"\\u8BF7\\u8F93\\u5165\\u65B0\\u5BC6\\u7801\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"confirmPassword\",label:\"\\u786E\\u8BA4\\u65B0\\u5BC6\\u7801\",dependencies:['newPassword'],rules:[{required:true,message:'请确认新密码'},_ref=>{let{getFieldValue}=_ref;return{validator(_,value){if(!value||getFieldValue('newPassword')===value){return Promise.resolve();}return Promise.reject(new Error('两次输入的密码不一致'));}};}],children:/*#__PURE__*/_jsx(Input.Password,{prefix:/*#__PURE__*/_jsx(LockOutlined,{}),placeholder:\"\\u8BF7\\u518D\\u6B21\\u8F93\\u5165\\u65B0\\u5BC6\\u7801\"})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",loading:loading,children:\"\\u4FEE\\u6539\\u5BC6\\u7801\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>form.resetFields(),children:\"\\u91CD\\u7F6E\"})]})})]})}),/*#__PURE__*/_jsx(Card,{title:\"\\u8D26\\u6237\\u4FE1\\u606F\",style:{maxWidth:500,marginTop:'24px'},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u7528\\u6237\\u540D\\uFF1A\"}),user===null||user===void 0?void 0:user.username]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u90AE\\u7BB1\\uFF1A\"}),(user===null||user===void 0?void 0:user.email)||'未设置']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u89D2\\u8272\\uFF1A\"}),(user===null||user===void 0?void 0:user.role)==='admin'?'管理员':'用户']})]})})]});};export default Settings;","map":{"version":3,"names":["React","useState","Form","Input","Button","Card","message","Space","LockOutlined","UserOutlined","useAuth","authService","jsx","_jsx","jsxs","_jsxs","Settings","loading","setLoading","usernameLoading","setUsernameLoading","form","useForm","usernameForm","user","refreshUser","onFinish","values","changePassword","currentPassword","newPassword","success","resetFields","error","_error$response","_error$response$data","response","data","onUsernameFinish","changeUsername","newUsername","children","style","marginBottom","title","maxWidth","layout","Item","name","label","rules","required","min","validator","_","value","username","Promise","reject","Error","resolve","prefix","placeholder","concat","type","htmlType","onClick","Password","dependencies","_ref","getFieldValue","marginTop","email","role"],"sources":["/Users/jayt/Desktop/legal.consulargo.io/legal-admin-system/legal.consulargo.io/frontend/src/pages/Settings.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, Card, message, Space } from 'antd';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { useAuth } from '../contexts/AuthContext';\nimport { authService } from '../services/authService';\n\nconst Settings: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [usernameLoading, setUsernameLoading] = useState(false);\n  const [form] = Form.useForm();\n  const [usernameForm] = Form.useForm();\n  const { user, refreshUser } = useAuth();\n\n  const onFinish = async (values: any) => {\n    setLoading(true);\n    try {\n      await authService.changePassword(values.currentPassword, values.newPassword);\n      message.success('密码修改成功！');\n      form.resetFields();\n    } catch (error: any) {\n      message.error(error.response?.data?.error || '密码修改失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onUsernameFinish = async (values: any) => {\n    setUsernameLoading(true);\n    try {\n      await authService.changeUsername(values.newUsername);\n      message.success('用户名修改成功！');\n      usernameForm.resetFields();\n      // 刷新用户信息\n      if (refreshUser) {\n        refreshUser();\n      }\n    } catch (error: any) {\n      message.error(error.message || '用户名修改失败');\n    } finally {\n      setUsernameLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1 style={{ marginBottom: '24px' }}>设置</h1>\n      \n      <Card title=\"修改用户名\" style={{ maxWidth: 500, marginBottom: '24px' }}>\n        <Form\n          form={usernameForm}\n          layout=\"vertical\"\n          onFinish={onUsernameFinish}\n        >\n          <Form.Item\n            name=\"newUsername\"\n            label=\"新用户名\"\n            rules={[\n              { required: true, message: '请输入新用户名' },\n              { min: 3, message: '用户名长度至少3位' },\n              {\n                validator: (_, value) => {\n                  if (value && value === user?.username) {\n                    return Promise.reject(new Error('新用户名不能与当前用户名相同'));\n                  }\n                  return Promise.resolve();\n                }\n              }\n            ]}\n          >\n            <Input \n              prefix={<UserOutlined />}\n              placeholder={`当前用户名: ${user?.username}`}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Space>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={usernameLoading}\n              >\n                修改用户名\n              </Button>\n              <Button onClick={() => usernameForm.resetFields()}>\n                重置\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Card>\n        \n      <Card title=\"修改密码\" style={{ maxWidth: 500 }}>\n          <Form\n            form={form}\n            layout=\"vertical\"\n            onFinish={onFinish}\n          >\n            <Form.Item\n              name=\"currentPassword\"\n              label=\"当前密码\"\n              rules={[{ required: true, message: '请输入当前密码' }]}\n            >\n              <Input.Password \n                prefix={<LockOutlined />}\n                placeholder=\"请输入当前密码\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"newPassword\"\n              label=\"新密码\"\n              rules={[\n                { required: true, message: '请输入新密码' },\n                { min: 6, message: '密码长度至少6位' }\n              ]}\n            >\n              <Input.Password \n                prefix={<LockOutlined />}\n                placeholder=\"请输入新密码\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"confirmPassword\"\n              label=\"确认新密码\"\n              dependencies={['newPassword']}\n              rules={[\n                { required: true, message: '请确认新密码' },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue('newPassword') === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(new Error('两次输入的密码不一致'));\n                  },\n                }),\n              ]}\n            >\n              <Input.Password \n                prefix={<LockOutlined />}\n                placeholder=\"请再次输入新密码\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Space>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  loading={loading}\n                >\n                  修改密码\n                </Button>\n                <Button onClick={() => form.resetFields()}>\n                  重置\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </Card>\n\n        <Card title=\"账户信息\" style={{ maxWidth: 500, marginTop: '24px' }}>\n          <div>\n            <p><strong>用户名：</strong>{user?.username}</p>\n            <p><strong>邮箱：</strong>{user?.email || '未设置'}</p>\n            <p><strong>角色：</strong>{user?.role === 'admin' ? '管理员' : '用户'}</p>\n          </div>\n        </Card>\n      </div>\n  );\n};\n\nexport default Settings;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}