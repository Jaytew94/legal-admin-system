{"ast":null,"code":"import axios from'axios';import{config}from'../config';const API_BASE_URL=config.apiUrl;const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});api.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});export const recordService={// 获取记录列表\ngetRecords:async params=>{const response=await api.get('/records',{params});return response.data;},// 获取单个记录\ngetRecord:async id=>{const response=await api.get(\"/records/\".concat(id));return response.data;},// 创建记录\ncreateRecord:async data=>{const response=await api.post('/records',data);return response.data;},// 更新记录\nupdateRecord:async(id,data)=>{const response=await api.put(\"/records/\".concat(id),data);return response.data;},// 删除记录\ndeleteRecord:async id=>{const response=await api.delete(\"/records/\".concat(id));return response.data;},// 批量删除记录\ndeleteRecords:async ids=>{const response=await api.delete('/records',{data:{ids}});return response.data;},// 批量更新状态\nupdateRecordsStatus:async(ids,status)=>{const response=await api.patch('/records/status',{ids,status});return response.data;}};","map":{"version":3,"names":["axios","config","API_BASE_URL","apiUrl","api","create","baseURL","headers","interceptors","request","use","token","localStorage","getItem","Authorization","concat","error","Promise","reject","recordService","getRecords","params","response","get","data","getRecord","id","createRecord","post","updateRecord","put","deleteRecord","delete","deleteRecords","ids","updateRecordsStatus","status","patch"],"sources":["/Users/jayt/Desktop/legal.consulargo.io/legal-admin-system/legal.consulargo.io/frontend/src/services/recordService.ts"],"sourcesContent":["import axios from 'axios';\nimport { config } from '../config';\n\nconst API_BASE_URL = config.apiUrl;\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport interface Record {\n  id: number;\n  qr_code: string;\n  legalization_no: string;\n  issue_date: string;\n  place_of_issue?: string;\n  legalization_type: string;\n  authorized_officer: string;\n  document_owner: string;\n  document_type: string;\n  status: string;\n  created_by?: number;\n  created_by_name?: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface CreateRecordData {\n  legalization_no: string;\n  issue_date: string;\n  place_of_issue?: string;\n  legalization_type: string;\n  authorized_officer: string;\n  document_owner: string;\n  document_type: string;\n}\n\nexport interface RecordsResponse {\n  records: Record[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    pages: number;\n  };\n}\n\nexport const recordService = {\n  // 获取记录列表\n  getRecords: async (params: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    status?: string;\n  }): Promise<RecordsResponse> => {\n    const response = await api.get('/records', { params });\n    return response.data;\n  },\n\n  // 获取单个记录\n  getRecord: async (id: number): Promise<{ record: Record }> => {\n    const response = await api.get(`/records/${id}`);\n    return response.data;\n  },\n\n  // 创建记录\n  createRecord: async (data: CreateRecordData): Promise<{\n    message: string;\n    record: { id: number; qr_code: string; qr_filename: string };\n  }> => {\n    const response = await api.post('/records', data);\n    return response.data;\n  },\n\n  // 更新记录\n  updateRecord: async (id: number, data: Partial<CreateRecordData> & { status?: string }): Promise<{ message: string }> => {\n    const response = await api.put(`/records/${id}`, data);\n    return response.data;\n  },\n\n  // 删除记录\n  deleteRecord: async (id: number): Promise<{ message: string }> => {\n    const response = await api.delete(`/records/${id}`);\n    return response.data;\n  },\n\n  // 批量删除记录\n  deleteRecords: async (ids: number[]): Promise<{ message: string; deletedCount: number }> => {\n    const response = await api.delete('/records', { data: { ids } });\n    return response.data;\n  },\n\n  // 批量更新状态\n  updateRecordsStatus: async (ids: number[], status: string): Promise<{ message: string; updatedCount: number }> => {\n    const response = await api.patch('/records/status', { ids, status });\n    return response.data;\n  },\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,WAAW,CAElC,KAAM,CAAAC,YAAY,CAAGD,MAAM,CAACE,MAAM,CAElC,KAAM,CAAAC,GAAG,CAAGJ,KAAK,CAACK,MAAM,CAAC,CACvBC,OAAO,CAAEJ,YAAY,CACrBK,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBT,MAAM,EAAK,CACV,KAAM,CAAAU,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTV,MAAM,CAACM,OAAO,CAACO,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAV,MAAM,CACf,CAAC,CACAe,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAuCD,MAAO,MAAM,CAAAG,aAAa,CAAG,CAC3B;AACAC,UAAU,CAAE,KAAO,CAAAC,MAKlB,EAA+B,CAC9B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAACmB,GAAG,CAAC,UAAU,CAAE,CAAEF,MAAO,CAAC,CAAC,CACtD,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAC,SAAS,CAAE,KAAO,CAAAC,EAAU,EAAkC,CAC5D,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAACmB,GAAG,aAAAR,MAAA,CAAaW,EAAE,CAAE,CAAC,CAChD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAG,YAAY,CAAE,KAAO,CAAAH,IAAsB,EAGrC,CACJ,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAACwB,IAAI,CAAC,UAAU,CAAEJ,IAAI,CAAC,CACjD,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAK,YAAY,CAAE,KAAAA,CAAOH,EAAU,CAAEF,IAAqD,GAAmC,CACvH,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAAC0B,GAAG,aAAAf,MAAA,CAAaW,EAAE,EAAIF,IAAI,CAAC,CACtD,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAO,YAAY,CAAE,KAAO,CAAAL,EAAU,EAAmC,CAChE,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAAC4B,MAAM,aAAAjB,MAAA,CAAaW,EAAE,CAAE,CAAC,CACnD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAS,aAAa,CAAE,KAAO,CAAAC,GAAa,EAAyD,CAC1F,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAAC4B,MAAM,CAAC,UAAU,CAAE,CAAER,IAAI,CAAE,CAAEU,GAAI,CAAE,CAAC,CAAC,CAChE,MAAO,CAAAZ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAW,mBAAmB,CAAE,KAAAA,CAAOD,GAAa,CAAEE,MAAc,GAAyD,CAChH,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAlB,GAAG,CAACiC,KAAK,CAAC,iBAAiB,CAAE,CAAEH,GAAG,CAAEE,MAAO,CAAC,CAAC,CACpE,MAAO,CAAAd,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}